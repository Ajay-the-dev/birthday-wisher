(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./options.js", "@tsparticles/basic", "@tsparticles/updater-destroy", "@tsparticles/plugin-emitters", "@tsparticles/plugin-emitters-shape-square", "@tsparticles/updater-life", "@tsparticles/shape-line", "@tsparticles/updater-rotate", "@tsparticles/plugin-sounds", "@tsparticles/updater-stroke-color"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.loadFireworksPreset = void 0;
    const options_js_1 = require("./options.js");
    const basic_1 = require("@tsparticles/basic");
    const updater_destroy_1 = require("@tsparticles/updater-destroy");
    const plugin_emitters_1 = require("@tsparticles/plugin-emitters");
    const plugin_emitters_shape_square_1 = require("@tsparticles/plugin-emitters-shape-square");
    const updater_life_1 = require("@tsparticles/updater-life");
    const shape_line_1 = require("@tsparticles/shape-line");
    const updater_rotate_1 = require("@tsparticles/updater-rotate");
    const plugin_sounds_1 = require("@tsparticles/plugin-sounds");
    const updater_stroke_color_1 = require("@tsparticles/updater-stroke-color");
    async function loadFireworksPreset(engine, refresh = true) {
        await (0, basic_1.loadBasic)(engine, false);
        await (0, plugin_emitters_1.loadEmittersPlugin)(engine, false);
        await (0, plugin_emitters_shape_square_1.loadEmittersShapeSquare)(engine, false);
        await (0, plugin_sounds_1.loadSoundsPlugin)(engine, false);
        await (0, shape_line_1.loadLineShape)(engine, false);
        await (0, updater_rotate_1.loadRotateUpdater)(engine, false);
        await (0, updater_destroy_1.loadDestroyUpdater)(engine, false);
        await (0, updater_life_1.loadLifeUpdater)(engine, false);
        await (0, updater_stroke_color_1.loadStrokeColorUpdater)(engine, false);
        await engine.addPreset("fireworks", (0, options_js_1.initOptions)(engine), false);
        await engine.refresh(refresh);
    }
    exports.loadFireworksPreset = loadFireworksPreset;
});
